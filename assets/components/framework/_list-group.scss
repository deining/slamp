// _list-group.scss

// Base class
//
// Easily usable on <ul>, <ol>, or <div>.
@if $enable-amp-list-group {
	.list-group {
	  display: flex;
	  flex-direction: column;
	
	  // No need to set list-style: none; since .list-group-item is block level
	  padding-left: 0; // reset padding because ul and ol
	  margin-bottom: 0;
	}
}


// Interactive list items
//
// Use anchor or button elements instead of `li`s or `div`s to create interactive
// list items. Includes an extra `.active` modifier class for selected items.
@if $enable-amp-list-group-item-action {
	.list-group-item-action {
	  width: 100%; // For `<button>`s (anchors become 100% by default though)
	  text-align: inherit; // For `<button>`s (anchors inherit)
		
		@media (prefers-color-scheme: light) {
			color: $list-group-action-color;
		}
	
		@media (prefers-color-scheme: dark) {
			color: $list-group-action-color-inverse;
		}
	
	  // Hover state
	  @include hover-focus() {
	    z-index: 1; // Place hover/focus items above their siblings for proper border styling
	    text-decoration: none;
		
			@media (prefers-color-scheme: light) {
				color: $list-group-action-hover-color;
				background: $list-group-hover-bg;
			}
		
			@media (prefers-color-scheme: dark) {
				color: $list-group-action-hover-color-inverse;
				background: $list-group-hover-bg-inverse;
			}
	  }
	
	  &:active {
			@media (prefers-color-scheme: light) {
				color: $list-group-action-active-color;
				background: $list-group-action-active-bg;
			}
		
			@media (prefers-color-scheme: dark) {
				color: $list-group-action-active-color-inverse;
				background: $list-group-action-active-bg-inverse;
			}
	  }
	}
}


// Individual list items
//
// Use on `li`s or `div`s within the `.list-group` parent.
@if $enable-amp-list-group-item {
	.list-group-item {
	  position: relative;
	  display: block;
	  padding: $list-group-item-padding-y $list-group-item-padding-x;
		
		@media (prefers-color-scheme: light) {
			color: $list-group-color;
			background: $list-group-bg;
			border: $list-group-border-width solid $list-group-border-color;
		}
	
		@media (prefers-color-scheme: dark) {
			color: $list-group-color-inverse;
			background: $list-group-bg-inverse;
			border: $list-group-border-width solid $list-group-border-color-inverse;
		}
	
	  &:first-child {
	    @include border-top-radius($list-group-border-radius);
	  }
	
	  &:last-child {
	    @include border-bottom-radius($list-group-border-radius);
	  }
	
	  &.disabled,
	  &:disabled {
	    pointer-events: none;
		
			@media (prefers-color-scheme: light) {
				color: $list-group-disabled-color;
				background: $list-group-disabled-bg;
			}
		
			@media (prefers-color-scheme: dark) {
				color: $list-group-disabled-color-inverse;
				background: $list-group-disabled-bg-inverse;
			}
	  }
	
	  // Include both here for `<a>`s and `<button>`s
	  &.active {
	    z-index: 2; // Place active items above their siblings for proper border styling
		
			@media (prefers-color-scheme: light) {
				color: $list-group-active-color;
				background: $list-group-active-bg;
				border-color: $list-group-active-border-color;
			}
		
			@media (prefers-color-scheme: dark) {
				color: $list-group-active-color-inverse;
				background: $list-group-active-bg-inverse;
				border-color: $list-group-active-border-color-inverse;
			}
	  }
	
	  & + & {
	    border-top-width: 0;
	
	    &.active {
	      margin-top: -$list-group-border-width;
	      border-top-width: $list-group-border-width;
	    }
	  }
	}
}


// Horizontal
//
// Change the layout of list group items from vertical (default) to horizontal.
@if $enable-amp-list-group-x {
	@each $amp-breakpoint in map-keys($amp-grid-breakpoints) {
	  @include media-breakpoint-up($amp-breakpoint) {
	    $infix: breakpoint-infix($amp-breakpoint, $amp-grid-breakpoints);
	
	    .list-group-horizontal#{$infix} {
	      flex-direction: row;
	
	      .list-group-item {
	        &:first-child {
	          @include border-bottom-left-radius($list-group-border-radius);
	          @include border-top-right-radius(0);
	        }
	
	        &:last-child {
	          @include border-top-right-radius($list-group-border-radius);
	          @include border-bottom-left-radius(0);
	        }
	
	        &.active {
	          margin-top: 0;
	        }
	
	        & + .list-group-item {
	          border-top-width: $list-group-border-width;
	          border-left-width: 0;
	
	          &.active {
	            margin-left: -$list-group-border-width;
	            border-left-width: $list-group-border-width;
	          }
	        }
	      }
	    }
	  }
	}
}

// Flush list items
//
// Remove borders and border-radius to keep list group items edge-to-edge. Most
// useful within other components (e.g., cards).
@if $enable-amp-list-group-flush {
	.list-group-flush {
	  .list-group-item {
	    border-right-width: 0;
			border-left-width: 0;
			
	    @include border-radius(0);
	
	    &:first-child {
	      border-top-width: 0;
	    }
	  }
	
	  &:last-child {
	    .list-group-item:last-child {
	      border-bottom-width: 0;
	    }
	  }
	}
}

// Contextual variants
//
// Add modifier classes to change text and background color on individual items.
// Organizationally, this must come after the `:hover` states.
@if $enable-amp-list-group-colors {
	@each $color, $value in $amp-theme-colors {
	  @include list-group-item-variant($color, theme-color-level($color, -9), theme-color-level($color, 6));
	}
}